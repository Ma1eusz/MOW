library("RWeka")
library("class")
library("e1071")
library("notSoNaiveBayes")
library("boot")
library(mlbench)
library("kknn")

car <- read.arff(file = "chess.data")
#data(chess.rad)

#rows <- runif(nrow(car))


rozmiar = dim(car)[1]
los =  sample(rozmiar)
hv.train = car[los[1:floor(rozmiar*.9)],]
hv.test = car[los[ceiling(rozmiar*.9):rozmiar],]
library("rpart")

library(caret)

hv.notNaive <-notSoNaiveBayes(hv.train[,-37],hv.train[,37])

hv.nb <- naiveBayes(wtoeg ~.,hv.train)

confusionMatrix(predict(hv.nb, hv.test[,-37]), hv.test$wtoeg, positive="won")

#notNaiveBayes

confusionMatrix(predict(hv.notNaive, hv.test[,-37]), hv.test[,37], positive="won")

hv.test$wtoeg

simulation(wtoeg ~., data = hv.test, runs = 5, train = TRUE, kernel = "triangular", k = 15)

